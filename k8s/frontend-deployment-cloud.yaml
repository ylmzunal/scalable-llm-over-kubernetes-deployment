apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-chatbot-frontend
  namespace: default
  labels:
    app: llm-chatbot
    component: frontend
    version: v1
    environment: cloud
spec:
  replicas: 2  # Can scale more since frontend is lightweight
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: llm-chatbot
      component: frontend
  template:
    metadata:
      labels:
        app: llm-chatbot
        component: frontend
        version: v1
        environment: cloud
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/health"
    spec:
      securityContext:
        runAsNonRoot: false  # Allow nginx to run with necessary permissions
        fsGroup: 101
      containers:
      - name: frontend
        image: us-central1-docker.pkg.dev/scalable-llm-chatbot/llm-chatbot-repo/llm-chatbot-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_URL
          value: "/api"  # Use nginx proxy
        - name: REACT_APP_ENVIRONMENT
          value: "cloud"
        - name: BACKEND_SERVICE_NAME
          value: "llm-chatbot-backend-service.default.svc.cluster.local:80"
        - name: HTTP_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "64Mi"   # Frontend is lightweight
            cpu: "50m"       # Frontend is lightweight
          limits:
            memory: "128Mi"  # Frontend is lightweight
            cpu: "100m"      # Frontend is lightweight
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - SETGID
            - SETUID
      terminationGracePeriodSeconds: 30
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: llm-chatbot-frontend-service
  namespace: default
  labels:
    app: llm-chatbot
    component: frontend
    environment: cloud
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  selector:
    app: llm-chatbot
    component: frontend
  sessionAffinity: None

# SSL Certificate configuration moved to k8s/ssl-certificate-askllm.yaml
# Use the dedicated SSL setup script: ./scripts/setup-ssl-askllm.sh 